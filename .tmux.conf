#前缀修改
#set -g prefix C-a
# 确保我们可以向其它程序发送 Ctrl-A
#bind C-a send-prefix

set -g prefix2 C-z
bind C-z send-prefix -2
unbind C-b

# 设定前缀键和命令键之间的延时
set -sg escape-time 1

# 24小时时钟
setw -g clock-mode-style 24

setw -g xterm-keys on
set -sg repeat-time 600
set -s quiet on
set -g history-limit 10000
setw -g automatic-rename on
set -g renumber-windows on
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

# 清楚屏幕和历史记录
bind -n C-l send-keys C-l \; run 'tmux clear-history'

bind -n S-F1 select-window -t :1
bind -n S-F2 select-window -t :2
bind -n S-F3 select-window -t :3
bind -n S-F4 select-window -t :4
bind -n S-F5 select-window -t :5
bind -n S-F6 select-window -t :6
bind -n S-F7 select-window -t :7
bind -n S-F8 select-window -t :8
bind -n S-F9 select-window -t :9
# 把窗口的初始索引值从0改为1
set -g base-index 1
# 把面板的初始索引值从0改为1
setw -g pane-base-index 1

# 创建新session
bind C-c new-session
# 查找 session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# 分割面板
bind | split-window -h
bind - split-window -v

# 快速选择面板
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# 窗口选择n,tab
bind -r C-h previous-window
bind -r TAB previous-window
bind -r C-l next-window
bind -r n next-window
bind Space last-window

# 在面板之间移动
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 调整面板大小
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 与下一个面板交换
bind > swap-pane -D
# 与前一个面板交换
bind < swap-pane -U

# 鼠标支持 - 如果你想使用的话把off改为on
bind m run "cut -c3- ~/.tmux.conf | sh -s toggle_mouse"
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# 设置默认的终端模式为256色模式
set -g default-terminal "screen-256color"

# 开启活动通知
setw -g monitor-activity on
set -g visual-activity on

# 设置状态栏的颜色
set -g status-fg white
set -g status-bg black

# 设置窗口列表的颜色
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# 设置活动窗口的颜色
setw -g window-status-current-fg colour166
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# 设置面板和活动面板的颜色
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# 设置命令行或消息的颜色
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# 设置状态栏左侧的内容和颜色
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-utf8 on
setw -g utf8 on

# 设置状态栏右侧的内容和颜色
# 15% | 28 Nov 18:15
set -g status-right "#(~/battery Discharging) | #[fg=cyan]%d %b %R"

# 每10秒更新一次状态栏
set -g status-interval 10

# 设置窗口列表居中显示
set -g status-justify centre

# 开启vi按键
setw -g mode-keys vi

# 在相同目录下使用tmux-panes脚本开启面板
# unbind v
# unbind n
# bind v send-keys " ~/tmux-panes -h" C-m
# bind n send-keys " ~/tmux-panes -v" C-m

# 最大化面板或恢复面板大
# unbind Up
# bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
# unbind Down
# bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
# 最大化当前面板
# bind + run 'cut -c3- ~/.tmux.conf | sh -s maximize_pane'

# 把日志文件输出到指定文件
# bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# 重载配置
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# 编辑配置
bind e new-window -n '~/.tmux.conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# 拷贝到 Mac OSX 剪贴板
if 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# -- list choice ---------------------------------------------------------------
bind -t vi-choice h tree-collapse
bind -t vi-choice l tree-expand
run 'tmux bind -t vi-choice K start-of-list 2> /dev/null'
run 'tmux bind -t vi-choice J end-of-list 2> /dev/null'
bind -t vi-choice H tree-collapse-all
bind -t vi-choice L tree-expand-all
bind -t vi-choice Escape cancel

# -- edit mode -----------------------------------------------------------------
# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
bind -ct vi-edit H start-of-line
bind -ct vi-edit L end-of-line
bind -ct vi-edit q cancel
bind -ct vi-edit Escape cancel

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

# the following vi-copy bindings match my vim settings，see https://github.com/gpakosz/.vim.git  
bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-selection
bind -t vi-copy Escape cancel
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line

